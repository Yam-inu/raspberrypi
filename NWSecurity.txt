//20240528 iptables practice
sudo iptables -P INPUT DROP
sudo iptables -P FORWARD DROP
sudo iptables -t filter -A INPUT -p tcp --sport 80 -m state --state ESTABLISHED,RELATED -j ACCEPT
sudo iptables -t filter -A INPUT -p tcp --sport 443 -m state --state ESTABLISHED,RELATED -j ACCEPT
sudo iptables -t filter -A INPUT -p udp --sport 53 -j ACCEPT
sudo iptables -t filter -A INPUT -p tcp --dport 80 -j ACCEPT
sudo iptables -t filter -A INPUT -p tcp ! --tcp-flags FIN,SYN,RST,ACK SYN -m state --state NEW -j DROP


//20240611 snort install
sudo apt install -y build-essential autotools-dev libdumbnet-dev libluajit-5.1-dev libpcap-dev libpcre3-dev zlib1g-dev pkg-config libhwloc-dev cmake liblzma-dev openssl libssl-dev cpputest libsqlite3-dev uuid-dev libtool git autoconf bison flex

cd ~
mkdir snort-src
cd snort-src
sudo wget https://www.snort.org/downloads/snort/daq-2.0.7.tar.gz
tar -xzvf daq-2.0.7.tar.gz 
cd daq-2.0.7
sudo ./configure
sudo make
sudo make install
sudo ldconfig

cd ~/snort-src
sudo wget https://www.snort.org/downloads/snort/snort-2.9.20.tar.gz
tar -xzvf snort-2.9.20.tar.gz
cd snort-2.9.20
sudo ./configure
sudo make
sudo meke install

//if you can not found c library, execute "sudo cp -r /usr/include/ntirpc/* /usr/include/"

cd ~
mkdir snort snort/IDS snort/IDS/conf snort/IDS/log snort/IDS/rules
sudo cp ~/snort-src/snort-2.9.20/etc/* ~/snort/IDS/conf


//20240618 suricata install
sudo apt install libpcre3 libpcre3-dbg libpcre3-dev build-essential libpcap-dev libyaml-0-2 libyaml-dev pkg-config zlib1g zlib1g-dev make libmagic-dev libjansson-dev rustc cargo python3-yaml liblua5.1-dev -y

wget https://www.openinfosecfoundation.org/download/suricata-6.0.19.tar.gz
tar -xvf suricata-6.0.19.tar.gz 
cd  suricata-6.0.19/

./configure -prefix=/usr -sysconfdir=/etc -localstatedir=/var -enable-nfqueue -enable-lua
make
sudo make install
cd suricata-update
sudo python setup.py build
sudo python setup.py install
cd ../
sudo make install-full
sudo suricata-update

//rule file
sudo -s
cd /var/lib/suricata/rules/
mv suricata.rules suricata.rules.org
touch suricata.rules
exit

// execute
sudo suricata -c /etc/suricata/suricata.yaml -i eth0 -S /var/lib/suricata/rules/suricata.rules

// alert log file
// cat /var/log/suricata/fast.log

// suricata signature
# sample
#alert icmp any any -> any any (sid:1000000; msg:"ICMP_detection";)
# 1
alert icmp any any -> 192.168.100.137 any (sid:1000001; msg:"ping_detection";)
# 2
alert tcp any any -> 192.168.100.137 22 (sid:1000002; msg:"ssh_detection";)
# 3
alert tcp any any -> 192.168.100.137 80 (sid:1000003; msg:"http_detection";)
# 4
alert tcp any any -> 192.168.100.61 any (sid:1000004; msg:"B_tcp_detection";)
# 5
alert tcp 192.168.100.137 any -> 192.168.100.137 any (sid:1000005; msg:"land_detection";)
# 6
alert tcp !192.168.100.0/24 any -> any any (sid:1000006; msg:"other_network_detection";)
# 7
alert tcp any any -> any any (sid:1000007; content:"Not Found"; msg:"not_found_detection";)

alert tcp any any -> any any (sid:1000007; content:"404"; http.response_code; msg:"not_found_detection";)
# 8
alert udp any any -> any any (sid:1000008; dsize:>1000; msg:"big_udp_detection";)
# 9
alert tcp any any -> any 20:100 (sid:1000009; flags:S; msg:"syn_detection";)
# 10
alert tcp any any -> any any (sid:1000010; flags:SFA; msg:"syn_fin_ack_detection";)

// suricata kadai2
1.
ping 192.168.100.137
2.
ssh kataoka@192.168.100.137
3.
「http://192.168.100.137」にアクセス
4.
「http://192.168.100.137」にアクセス
5.
sudo hping3 192.168.100.61 --spoof 192.168.100.61
6.
sudo hping3 192.168.100.61 --spoof 192.168.1.60
7.
「http://192.168.100.137/test」にアクセス
8.
sudo hping3 192.168.100.61 --data 1010 --udp
9
sudo hping3 192.168.100.61 -S -p 22
10.
sudo hping3 192.168.100.61 -S -F -A

